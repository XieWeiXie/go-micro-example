// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/wuxiaoxiaoshen/go-micro-example/srv/auth/protoc/auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	UserName             string   `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_46694ee7a0f5fc08, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Response struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_46694ee7a0f5fc08, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Request)(nil), "auth.Request")
	proto.RegisterType((*Response)(nil), "auth.Response")
}

func init() {
	proto.RegisterFile("github.com/wuxiaoxiaoshen/go-micro-example/srv/auth/protoc/auth.proto", fileDescriptor_46694ee7a0f5fc08)
}

var fileDescriptor_46694ee7a0f5fc08 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8e, 0x31, 0x4f, 0x86, 0x30,
	0x10, 0x86, 0xfd, 0xc8, 0x17, 0xc5, 0x26, 0x1f, 0x43, 0x27, 0xc2, 0x64, 0x58, 0x74, 0x81, 0x26,
	0xba, 0xb8, 0x32, 0xb8, 0x1a, 0xd3, 0xc4, 0x1f, 0x50, 0xf0, 0x42, 0x1b, 0x2c, 0x87, 0xbd, 0x56,
	0x88, 0xbf, 0xde, 0xb4, 0x88, 0x43, 0x93, 0xe7, 0xe9, 0x9b, 0xbb, 0x7b, 0xd9, 0xcb, 0x68, 0xbc,
	0x0e, 0x7d, 0x3b, 0xa0, 0x15, 0x6b, 0xd8, 0x8c, 0xc2, 0xf8, 0x48, 0xc3, 0x2c, 0x46, 0x6c, 0xac,
	0x19, 0x1c, 0x36, 0xb0, 0x29, 0xbb, 0x7c, 0x82, 0x20, 0xf7, 0x2d, 0x54, 0xf0, 0x5a, 0x2c, 0x0e,
	0x3d, 0x0e, 0x89, 0xdb, 0xc4, 0xfc, 0x1c, 0xb9, 0xee, 0xd8, 0x8d, 0x84, 0xaf, 0x00, 0xe4, 0x79,
	0xc5, 0xf2, 0x77, 0x02, 0xf7, 0xaa, 0x2c, 0x94, 0xa7, 0xbb, 0xd3, 0xc3, 0xad, 0xfc, 0xf7, 0x98,
	0xbd, 0x29, 0xa2, 0x15, 0xdd, 0x47, 0x99, 0xed, 0xd9, 0xe1, 0x75, 0xc5, 0x72, 0x09, 0xb4, 0xe0,
	0x4c, 0xc0, 0x0b, 0x96, 0xe1, 0x94, 0xa6, 0x73, 0x99, 0xe1, 0xf4, 0xf8, 0xcc, 0x2e, 0x5d, 0xf0,
	0x1a, 0x9d, 0xf9, 0x51, 0xde, 0xe0, 0xcc, 0xef, 0xd9, 0x39, 0x7e, 0xf0, 0x4b, 0x9b, 0xaa, 0xfc,
	0xdd, 0xae, 0x8a, 0x43, 0xf7, 0x3d, 0xf5, 0x55, 0x7f, 0x9d, 0x5a, 0x3e, 0xfd, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0x82, 0x38, 0x04, 0xee, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthorizationClient is the client API for Authorization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizationClient interface {
	Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type authorizationClient struct {
	cc *grpc.ClientConn
}

func NewAuthorizationClient(cc *grpc.ClientConn) AuthorizationClient {
	return &authorizationClient{cc}
}

func (c *authorizationClient) Auth(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/auth.Authorization/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizationServer is the server API for Authorization service.
type AuthorizationServer interface {
	Auth(context.Context, *Request) (*Response, error)
}

func RegisterAuthorizationServer(s *grpc.Server, srv AuthorizationServer) {
	s.RegisterService(&_Authorization_serviceDesc, srv)
}

func _Authorization_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizationServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Authorization/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizationServer).Auth(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authorization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Authorization",
	HandlerType: (*AuthorizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _Authorization_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/wuxiaoxiaoshen/go-micro-example/srv/auth/protoc/auth.proto",
}
